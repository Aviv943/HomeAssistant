# - platform: rest
#   resource: !secret switcher_webapi_bottom_top_rig_ac_get_state
#   name: Switcher WebAPI Bottom Top Rig AC
#   json_attributes:
#     - state
#     - time_left
#     - auto_off
#     - power_consumption
#     - electric_current
#   value_template: 'OK'

# - platform: rest
#   resource: !secret switcher_webapi_top_rig_get_state
#   name: Switcher WebAPI Top Rig
#   json_attributes:
#     - state
#     - time_left
#     - auto_off
#     - power_consumption
#     - electric_current
#   value_template: 'OK'


# - platform: template
#   sensors:
#     switcher_webapi_bottom_top_rig_ac_time_left:
#       friendly_name: "Time Left"
#       icon_template: mdi:timelapse
#       value_template: >-
#         {% if is_state("sensor.switcher_webapi_bottom_top_rig_ac_state", "off") %}
#             off
#         {% else %}
#             {% set hour = states.sensor.switcher_webapi_bottom_top_rig_ac.attributes.time_left.split(':')[0] %}
#             {% set min = states.sensor.switcher_webapi_bottom_top_rig_ac.attributes.time_left.split(':')[1] %}
#             {% set sec = states.sensor.switcher_webapi_bottom_top_rig_ac.attributes.time_left.split(':')[2] %}
#             {{ hour | int }}h {{ min | int }}m
#         {% endif %}

#     switcher_webapi_bottom_top_rig_ac_auto_off_time:
#       friendly_name: "Auto Off"
#       icon_template: mdi:av-timer
#       value_template: >-
#         {% if is_state("sensor.switcher_webapi_bottom_top_rig_ac_state", "off") %}
#             off
#         {% else %}
#             {% set hour = states.sensor.switcher_webapi_bottom_top_rig_ac.attributes.time_left.split(':')[0] %}
#             {% set min = states.sensor.switcher_webapi_bottom_top_rig_ac.attributes.time_left.split(':')[1] %}
#             {% set sec = states.sensor.switcher_webapi_bottom_top_rig_ac.attributes.time_left.split(':')[2] %}
#             {% set seconds = hour | int *3600 + min | int * 60 + sec | int * 1  %}
#             {{ ( now().timestamp() + seconds ) | timestamp_custom("%H:%M") }}
#         {% endif %}

#     switcher_webapi_bottom_top_rig_ac_electric_current:
#       friendly_name: "Electric Current"
#       icon_template: mdi:flash
#       unit_of_measurement: A
#       value_template: >-
#         {{ state_attr('sensor.switcher_webapi_bottom_top_rig_ac', 'electric_current') }}

#     switcher_webapi_bottom_top_rig_ac_power_consumption:
#       friendly_name: "Power Consumption"
#       icon_template: mdi:flash
#       unit_of_measurement: kW
#       value_template: >-
#         {{ state_attr('sensor.switcher_webapi_bottom_top_rig_ac', 'power_consumption') }}

#     switcher_webapi_bottom_top_rig_ac_state:
#       friendly_name: "State"
#       icon_template: mdi:flash
#       value_template: >-
#         {{ state_attr('sensor.switcher_webapi_bottom_top_rig_ac', 'state') }} 
        
        
# - platform: template
#   sensors:
#     switcher_webapi_top_rig_time_left:
#       friendly_name: "Time Left"
#       icon_template: mdi:timelapse
#       value_template: >-
#         {% if is_state("sensor.switcher_webapi_top_rig_state", "off") %}
#             off
#         {% else %}
#             {% set hour = states.sensor.switcher_webapi_top_rig.attributes.time_left.split(':')[0] %}
#             {% set min = states.sensor.switcher_webapi_top_rig.attributes.time_left.split(':')[1] %}
#             {% set sec = states.sensor.switcher_webapi_top_rig.attributes.time_left.split(':')[2] %}
#             {{ hour | int }}h {{ min | int }}m
#         {% endif %}

#     switcher_webapi_top_rig_auto_off_time:
#       friendly_name: "Auto Off"
#       icon_template: mdi:av-timer
#       value_template: >-
#         {% if is_state("sensor.switcher_webapi_top_rig_state", "off") %}
#             off
#         {% else %}
#             {% set hour = states.sensor.switcher_webapi_top_rig.attributes.time_left.split(':')[0] %}
#             {% set min = states.sensor.switcher_webapi_top_rig.attributes.time_left.split(':')[1] %}
#             {% set sec = states.sensor.switcher_webapi_top_rig.attributes.time_left.split(':')[2] %}
#             {% set seconds = hour | int *3600 + min | int * 60 + sec | int * 1  %}
#             {{ ( now().timestamp() + seconds ) | timestamp_custom("%H:%M") }}
#         {% endif %}

#     switcher_webapi_top_rig_electric_current:
#       friendly_name: "Electric Current"
#       icon_template: mdi:flash
#       unit_of_measurement: A
#       value_template: >-
#         {{ state_attr('sensor.switcher_webapi_top_rig', 'electric_current') }}

#     switcher_webapi_top_rig_power_consumption:
#       friendly_name: "Power Consumption"
#       icon_template: mdi:flash
#       unit_of_measurement: kW
#       value_template: >-
#         {{ state_attr('sensor.switcher_webapi_top_rig', 'power_consumption') }}

#     switcher_webapi_top_rig_state:
#       friendly_name: "State"
#       icon_template: mdi:flash
#       value_template: >-
#         {{ state_attr('sensor.switcher_webapi_top_rig', 'state') }} 
        
# - platform: template
#   sensors:
#     switcher_webapi_total_electric_current:
#       friendly_name: "Switchers Total Electric Current"
#       icon_template: mdi:flash
#       unit_of_measurement: A
#       value_template: >-
#         {% set s1 = states('sensor.switcher_webapi_top_rig_electric_current') | float %}
#         {% set s2 = states('sensor.switcher_webapi_bottom_top_rig_ac_electric_current') | float %}
#         {{ s1 + s2 | float | round(1)}}        
        
#     switcher_webapi_total_power_consumption:
#       friendly_name: "Switchers Total Power Consumption"
#       icon_template: mdi:flash
#       unit_of_measurement: kW
#       value_template: >-
#         {% set s1 = states('sensor.switcher_webapi_top_rig_power_consumption') | int %}
#         {% set s2 = states('sensor.switcher_webapi_bottom_top_rig_ac_power_consumption') | int %}
#         {{ s1 + s2 | int }}
        
# - platform: template
#   sensors:
#     switcher_total_electric_pricing_per_hour:
#       friendly_name: "Switchers total electric pricing per hour"
#       unit_of_measurement: '₪'
#       icon_template: mdi:currency-ils
#       value_template: "{{ (states('sensor.switcher_webapi_total_power_consumption') | float /1000 * 0.5066) | round(2) }}"
      
# - platform: template
#   sensors:
#     switcher_total_electric_costs_daily:
#       friendly_name: "Switchers total electric costs daily"
#       unit_of_measurement: '₪'
#       icon_template: mdi:currency-ils
#       value_template: "{{ (states('sensor.switchers_power_consumption_daily') | float /1000 * 0.5066) | round(2) }}"
      
# - platform: template
#   sensors:
#     switcher_total_electric_costs_monthly:
#       friendly_name: "Switchers total electric costs monthly"
#       unit_of_measurement: '₪'
#       icon_template: mdi:currency-ils
#       value_template: "{{ (states('sensor.switchers_power_consumption_monthly') | float /1000 * 0.5066) | round(2) }}"
      
# - platform: template
#   sensors:
#     switchers_power_consumption_daily_kwh:
#       friendly_name: "Switchers Power Consumption Daily kWh"
#       unit_of_measurement: 'kWh'
#       icon_template: mdi:counter
#       value_template: "{{ (states('sensor.switchers_power_consumption_daily') | float /1000) | round(1) }}"
      
# - platform: template
#   sensors:
#     switchers_power_consumption_monthly_kwh:
#       friendly_name: "Switchers Power Consumption Monthly kWh"
#       unit_of_measurement: 'kWh'
#       icon_template: mdi:counter
#       value_template: "{{ (states('sensor.switchers_power_consumption_monthly') | float /1000) | round(1) }}"
      
# - platform: integration
#   source: sensor.switcher_webapi_total_power_consumption
#   name: Switchers Total Power Consumption Per Hour
#   unit_time: h