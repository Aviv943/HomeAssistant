- platform: filesize
  file_paths:
    - /config/home-assistant_v2.db
    
- platform: uptime
  name: Uptime
  unit_of_measurement: days
  
- platform: version
  name: HA Latest Version
  beta: false
  image: raspberrypi3
  source: hassio
  
- platform: version
  name: HA Current Version
  source: local
  
- platform: systemmonitor
  resources:
    - type: memory_use_percent
    - type: processor_use
    - type: last_boot
    - type: disk_use_percent
      arg: /home
      
- platform: template
  sensors:
    hassio_uptime:
      friendly_name: HA Uptime
      value_template: >
        {% if states('sensor.uptime') == '0.0' %} 
          Just restarted...
        {% else %}
          {% macro phrase(value, name) %}
          {%- set value = value | int %}
          {%- set end = 's' if value > 1 else '' %}
          {{- '{} {}{}'.format(value, name, end) if value | int > 0 else '' }}
          {%- endmacro %}
          
          {% set weeks = (states('sensor.uptime') | int / 7) | int %}
          {% set days = (states('sensor.uptime') | int) - (weeks * 7) %}
          {% set hours = (states('sensor.uptime') | float - states('sensor.uptime') | int) * 24 %}
          {% set minutes = (hours - hours | int) * 60 %}

          {{ [ phrase(weeks, 'week'), phrase(days, 'day'), phrase(hours, 'hr'), phrase(minutes, 'min') ] | select('!=','') | list | join(', ') }}
        {% endif %}
        
    hassio_last_boot_date_time:
      friendly_name: Last Boot
      value_template: >
        {% set date = as_timestamp(states('sensor.last_boot')) | timestamp_custom('%d') %}
        {% set date = '{:01}'.format(date | int) %}
        {% if date in ('1', '21', '31') %}
          {% set date = date ~ 'st' %}
        {% elif date in ('2', '22') %}
          {% set date = date ~ 'nd' %}
        {% elif date in ('3', '23') %}
          {% set date = date ~ 'rd' %}
        {% else %}
          {% set date = date ~ 'th' %}
        {% endif %}

        {{ as_timestamp(states('sensor.last_boot')) | timestamp_custom('%H:%M on %a') }} {{ date }} {{ as_timestamp(states('sensor.last_boot')) | timestamp_custom('%b %Y') }}